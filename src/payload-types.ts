/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    posts: Post;
    categories: Category;
    instructors: Instructor;
    'web-courses': WebCourse;
    departments: Department;
    events: Event;
    'event-feedbacks': EventFeedback;
    campaigns: Campaign;
    staffs: Staff;
    messages: Message;
    teachers: Teacher;
    'training-courses': TrainingCourse;
    'payment-plans': PaymentPlan;
    'discount-codes': DiscountCode;
    modules: Module;
    lectures: Lecture;
    batches: Batch;
    'time-table': TimeTable;
    coursework: Coursework;
    students: Student;
    enrollments: Enrollment;
    'fee-receipts': FeeReceipt;
    attendance: Attendance;
    'attendance-details': AttendanceDetail;
    leads: Lead;
    sops: Sop;
    'courses-collection': CoursesCollection;
    'contact-messages': ContactMessage;
    inquiries: Inquiry;
    'classes-employee': ClassesEmployee;
    'class-records': ClassRecord;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    departments: {
      relatedCourses: 'web-courses';
    };
    events: {
      eventLeads: 'leads';
    };
    campaigns: {
      campaignLeads: 'leads';
    };
    'training-courses': {
      relatedPaymentPlans: 'payment-plans';
    };
    batches: {
      relatedEnrollments: 'enrollments';
      batchTimeTable: 'time-table';
    };
    students: {
      studentEnrollments: 'enrollments';
    };
    enrollments: {
      relatedFeeReciepts: 'fee-receipts';
    };
    attendance: {
      relatedAttendanceDetails: 'attendance-details';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    instructors: InstructorsSelect<false> | InstructorsSelect<true>;
    'web-courses': WebCoursesSelect<false> | WebCoursesSelect<true>;
    departments: DepartmentsSelect<false> | DepartmentsSelect<true>;
    events: EventsSelect<false> | EventsSelect<true>;
    'event-feedbacks': EventFeedbacksSelect<false> | EventFeedbacksSelect<true>;
    campaigns: CampaignsSelect<false> | CampaignsSelect<true>;
    staffs: StaffsSelect<false> | StaffsSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    teachers: TeachersSelect<false> | TeachersSelect<true>;
    'training-courses': TrainingCoursesSelect<false> | TrainingCoursesSelect<true>;
    'payment-plans': PaymentPlansSelect<false> | PaymentPlansSelect<true>;
    'discount-codes': DiscountCodesSelect<false> | DiscountCodesSelect<true>;
    modules: ModulesSelect<false> | ModulesSelect<true>;
    lectures: LecturesSelect<false> | LecturesSelect<true>;
    batches: BatchesSelect<false> | BatchesSelect<true>;
    'time-table': TimeTableSelect<false> | TimeTableSelect<true>;
    coursework: CourseworkSelect<false> | CourseworkSelect<true>;
    students: StudentsSelect<false> | StudentsSelect<true>;
    enrollments: EnrollmentsSelect<false> | EnrollmentsSelect<true>;
    'fee-receipts': FeeReceiptsSelect<false> | FeeReceiptsSelect<true>;
    attendance: AttendanceSelect<false> | AttendanceSelect<true>;
    'attendance-details': AttendanceDetailsSelect<false> | AttendanceDetailsSelect<true>;
    leads: LeadsSelect<false> | LeadsSelect<true>;
    sops: SopsSelect<false> | SopsSelect<true>;
    'courses-collection': CoursesCollectionSelect<false> | CoursesCollectionSelect<true>;
    'contact-messages': ContactMessagesSelect<false> | ContactMessagesSelect<true>;
    inquiries: InquiriesSelect<false> | InquiriesSelect<true>;
    'classes-employee': ClassesEmployeeSelect<false> | ClassesEmployeeSelect<true>;
    'class-records': ClassRecordsSelect<false> | ClassRecordsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    'global-event-data': GlobalEventDatum;
    meetings: Meeting;
    'impact-section': ImpactSection;
    settings: Setting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'global-event-data': GlobalEventDataSelect<false> | GlobalEventDataSelect<true>;
    meetings: MeetingsSelect<false> | MeetingsSelect<true>;
    'impact-section': ImpactSectionSelect<false> | ImpactSectionSelect<true>;
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword:
    | {
        email: string;
      }
    | {
        username: string;
      };
  login:
    | {
        email: string;
        password: string;
      }
    | {
        password: string;
        username: string;
      };
  registerFirstUser: {
    password: string;
    username?: string;
    email: string;
  };
  unlock:
    | {
        email: string;
      }
    | {
        username: string;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  blocked?: boolean | null;
  gmail_username?: string | null;
  provider?: ('local' | 'google') | null;
  roles?:
    | ('superadmin' | 'admin' | 'developer' | 'operations' | 'accountant' | 'csr' | 'teacher' | 'student' | 'user')[]
    | null;
  photo?: (number | null) | Media;
  is_active?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  username?: string | null;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (CallToActionBlock | ContentBlock | MediaBlock | ArchiveBlock | FormBlock)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'date';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instructors".
 */
export interface Instructor {
  id: number;
  name: string;
  profileImage: number | Media;
  expertise: string;
  experience: number;
  biography: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "web-courses".
 */
export interface WebCourse {
  id: number;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  subTitle: string;
  learningOutcomes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  modules?:
    | {
        heading?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Duration in weeks
   */
  duration?: number | null;
  /**
   * Actual Price
   */
  price?: number | null;
  /**
   * Crossed Price
   */
  crossPrice?: number | null;
  department?: (number | null) | Department;
  image?: (number | null) | Media;
  difficultyLevel?: ('Beginner' | 'Intermediate' | 'Advanced') | null;
  renderStyle?: ('style-1' | 'style-2' | 'style-3') | null;
  courseFormat?: ('short' | 'medium' | 'long') | null;
  totalLectures?: number | null;
  orderInCourses?: number | null;
  projects?: number | null;
  instructor?: (number | null) | Instructor;
  FAQs?:
    | {
        question: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
    /**
     * The canonical URL for this page. Leave blank to use the default URL.
     */
    canonical?: string | null;
    /**
     * Add relevant keywords separated by commas
     */
    keywords?: string | null;
    /**
     * Add structured data for rich snippets
     */
    jsonld?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "departments".
 */
export interface Department {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  orderInDepartments?: number | null;
  description?: string | null;
  image?: (number | null) | Media;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  relatedCourses?: {
    docs?: (number | WebCourse)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events".
 */
export interface Event {
  id: number;
  title: string;
  label: string;
  slug: string;
  slugLock?: boolean | null;
  image?: (number | null) | Media;
  /**
   * Uncheck to hide this event from the website
   */
  showInUI?: boolean | null;
  /**
   * Link to the live stream event
   */
  liveStreamLink?: string | null;
  /**
   * Select the date and starting time of the event
   */
  startDateTime: string;
  /**
   * Select the end time of the event (optional). Default is 2 hours after the start time.
   */
  endTime?: string | null;
  learningOutcomes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  instructor?: (number | null) | Instructor;
  department?: (number | null) | Department;
  whatsappLink?: string | null;
  whatsappQrCode?: (number | null) | Media;
  defaultParticipants?: number | null;
  /**
   * Auto-calculated from leads registered for this event
   */
  totalRegistrations?: number | null;
  /**
   * Number of registrations from campaign UTM codes for this event
   */
  campaignRegistrations?: number | null;
  /**
   * View all leads registered for this event. Use this to track attendance and export data.
   */
  eventLeads?: {
    docs?: (number | Lead)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads".
 */
export interface Lead {
  id: number;
  name: string;
  mobile?: string | null;
  email?: string | null;
  gender?: ('MALE' | 'FEMALE') | null;
  area?: string | null;
  city?: string | null;
  province?: string | null;
  country?: string | null;
  is_online?: boolean | null;
  is_req_hostel?: boolean | null;
  stage?: ('NEW' | 'FOLLOW_UP' | 'CONVERTED' | 'WASTE') | null;
  interest_level?: ('LOW' | 'MEDIUM' | 'HIGH' | 'UNKNOWN') | null;
  education?: string | null;
  job_info?: string | null;
  student?: (number | null) | Student;
  module?: (number | null) | Module;
  department?: (number | null) | Department;
  reminder_date?: string | null;
  reminder_note?: string | null;
  not_responding?: boolean | null;
  assign_to?: (number | null) | Staff;
  courseDemoBookings?:
    | {
        course: number | CoursesCollection;
        bookedAt: string;
        id?: string | null;
      }[]
    | null;
  eventAttendance?:
    | {
        event: number | Event;
        campaign?: (number | null) | Campaign;
        source?: string | null;
        registeredAt?: string | null;
        hasAttended?: boolean | null;
        id?: string | null;
      }[]
    | null;
  payment_plan?: string | null;
  source?: string | null;
  query?: string | null;
  lead_issue?: string | null;
  notes?: string | null;
  activity?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  lead_engagement?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "students".
 */
export interface Student {
  id: number;
  user?: (number | null) | User;
  studentEmail?: string | null;
  studentPassword?: string | null;
  fullName?: string | null;
  phoneNumber?: string | null;
  gmail_username?: string | null;
  dateOfBirth?: string | null;
  gender?: ('male' | 'female') | null;
  /**
   * Highest Student Education
   */
  education?: string | null;
  otp?: string | null;
  otpVerified?: boolean | null;
  otpGeneratedAt?: string | null;
  address?: {
    homeAddress?: string | null;
    city?: string | null;
    state?: string | null;
    country?: string | null;
  };
  profilePicture?: (number | null) | Media;
  studentEnrollments?: {
    docs?: (number | Enrollment)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enrollments".
 */
export interface Enrollment {
  id: number;
  student: number | Student;
  'training-course': number | TrainingCourse;
  slug: string;
  batchEnrollments?:
    | {
        batch?: (number | null) | Batch;
        modules?: (number | Module)[] | null;
        mode?: ('ONLINE' | 'PHYSICAL' | 'HYBRID') | null;
        id?: string | null;
      }[]
    | null;
  selectedPaymentPlan: number | PaymentPlan;
  discountCode?: (number | null) | DiscountCode;
  admissionDate?: string | null;
  admissionFee?: number | null;
  freezeDate?: string | null;
  unfreezeDate?: string | null;
  completionState?: ('CONTINUE' | 'COMPLETED' | 'LEFT' | 'FREEZE') | null;
  certificateStatus?: ('ISSUED' | 'PENDING') | null;
  isSuspended?: boolean | null;
  note?: string | null;
  relatedFeeReciepts?: {
    docs?: (number | FeeReceipt)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "training-courses".
 */
export interface TrainingCourse {
  id: number;
  status?: ('active' | 'inactive') | null;
  title: string;
  slug: string;
  slugLock?: boolean | null;
  description?: string | null;
  modules?: (number | Module)[] | null;
  departments?: (number | Department)[] | null;
  /**
   * Full price of the course
   */
  fullPrice: number;
  relatedPaymentPlans?: {
    docs?: (number | PaymentPlan)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modules".
 */
export interface Module {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  nick: string;
  lectures?: (number | Lecture)[] | null;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lectures".
 */
export interface Lecture {
  id: number;
  topic: string;
  module?: (number | null) | Module;
  batches?: (number | Batch)[] | null;
  teacher?: (number | null) | Teacher;
  /**
   * pattern: Batchslug/moduleSlug/Topicslug
   */
  slug: string;
  videoUrl?: string | null;
  notes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  files?: (number | null) | Media;
  rating?: number | null;
  qa?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "batches".
 */
export interface Batch {
  id: number;
  /**
   * Pattern: Batch/StartDate/MMMYY.Teacher/nick.module/nick.TimeTable/Days/D.TimeTable/Time/HH:MM AM|PM
   */
  slug: string;
  'training-courses': number | TrainingCourse;
  teachers?: (number | Teacher)[] | null;
  modules?: (number | Module)[] | null;
  startDate?: string | null;
  /**
   * Duration in weeks
   */
  duration: number;
  endDate?: string | null;
  medium: 'ONLINE' | 'PHYSICAL' | 'HYBRID';
  canEnroll?: boolean | null;
  active?: boolean | null;
  note?: string | null;
  waGroupLink?: string | null;
  gcrLink?: string | null;
  relatedEnrollments?: {
    docs?: (number | Enrollment)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  batchTimeTable?: {
    docs?: (number | TimeTable)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teachers".
 */
export interface Teacher {
  id: number;
  user: number | User;
  fullName: string;
  nick: string;
  dateOfBirth?: string | null;
  phoneNumber?: string | null;
  address?: {
    street?: string | null;
    city?: string | null;
    state?: string | null;
    zipCode?: string | null;
    country?: string | null;
  };
  profilePicture?: (number | null) | Media;
  payMode?: ('FIX' | 'PER_LECTURE') | null;
  payPerLecture?: number | null;
  fixPay?: number | null;
  note?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "time-table".
 */
export interface TimeTable {
  id: number;
  batch: number | Batch;
  day: 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY';
  startTime: string;
  endTime: string;
  room?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-plans".
 */
export interface PaymentPlan {
  id: number;
  '_payment-plans_relatedPaymentPlans_order'?: string | null;
  'training-course': number | TrainingCourse;
  /**
   * Full Price of selected course
   */
  totalPrice?: number | null;
  name: string;
  /**
   * Mark one of the payment plans as popular
   */
  is_popular?: boolean | null;
  description: string;
  installments: {
    amount: number;
    /**
     * Number of days for next Due Date
     */
    due_after_days?: number | null;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage discount codes for training courses
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discount-codes".
 */
export interface DiscountCode {
  id: number;
  /**
   * Unique discount code (e.g., SAVE20)
   */
  code: string;
  /**
   * Link to the specific training course
   */
  'training-course': number | TrainingCourse;
  /**
   * Link to the payment plan of the training Course (e.g., Lump Sum or Installment)
   */
  paymentPlan: number | PaymentPlan;
  /**
   * Type of discount
   */
  discountType: 'percentage' | 'fixed';
  /**
   * Discount value (e.g., 20% or Rs 20 based on the discount type). This will be applied to each installment if there is more than one.
   */
  discountValue: number;
  /**
   * Maximum number of times this code can be used. Set to 0 if there is no usage limit.
   */
  usageLimit?: number | null;
  /**
   * Tracks how many times the code has been used
   */
  timesUsed?: number | null;
  /**
   * Expiry date and time of the discount code
   */
  expiryAt?: string | null;
  /**
   * Whether the code is currently valid (Will be auto changed, based on usage limit and time used)
   */
  isValid?: boolean | null;
  /**
   * Email of the specific user eligible for this discount code (this will sets usage_limit to 1)
   */
  userEmail?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fee-receipts".
 */
export interface FeeReceipt {
  id: number;
  student: number | Student;
  enrollment: number | Enrollment;
  amount: number;
  verified?: boolean | null;
  paidMethod?: ('BANK' | 'CASH' | 'JAZZCASH' | 'EASYPAISA') | null;
  status?: ('RECEIVED' | 'PENDING' | 'DEAD') | null;
  payDate?: string | null;
  dueDate: string;
  proofText?: string | null;
  proofImage?: (number | null) | Media;
  note?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "staffs".
 */
export interface Staff {
  id: number;
  user: number | User;
  fullName: string;
  nick?: string | null;
  dateOfBirth?: string | null;
  phoneNumber?: string | null;
  address?: {
    street?: string | null;
    city?: string | null;
    state?: string | null;
    zipCode?: string | null;
    country?: string | null;
  };
  profilePicture?: (number | null) | Media;
  payMode?: ('FIX' | 'PER_ADMISSION' | 'FIX_PLUS_PER_ADMISSION') | null;
  payPerAdmission?: number | null;
  fixPay?: number | null;
  note?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses-collection".
 */
export interface CoursesCollection {
  id: number;
  /**
   * Higher numbers appear first
   */
  sortOrder?: number | null;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  contentPosition?: ('left' | 'right') | null;
  linkLabel: string;
  linkUrl: string;
  courseCard: (number | WebCourse)[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns".
 */
export interface Campaign {
  id: number;
  name: string;
  platform?: string | null;
  /**
   * Detailed description of the campaign
   */
  detail?: string | null;
  startDate?: string | null;
  endDate?: string | null;
  budget?: number | null;
  events?: (number | Event)[] | null;
  /**
   * Identifies which site sent the traffic (e.g., google, facebook, newsletter)
   */
  utm_source?: string | null;
  /**
   * Identifies a specific product promotion or strategic campaign (e.g., spring_sale)
   */
  utm_campaign?: string | null;
  /**
   * Identifies what type of link was used (e.g., cpc, banner, email)
   */
  utm_medium?: string | null;
  /**
   * Identifies what specifically was clicked to bring the user (e.g., logolink, textlink)
   */
  utm_content?: string | null;
  /**
   * Legacy UTM field - kept for backward compatibility
   */
  utm?: string | null;
  /**
   * View all leads that came from this campaign. Use this to track campaign effectiveness.
   */
  campaignLeads?: {
    docs?: (number | Lead)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-feedbacks".
 */
export interface EventFeedback {
  id: number;
  lead: number | Lead;
  event: number | Event;
  rating: number;
  reason?:
    | ('topic-interest' | 'mentor-preference' | 'mentorship-program-interest' | 'field-specific-interest' | 'others')
    | null;
  otherReason?: string | null;
  mentorship?: ('yes' | 'no') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: number;
  title: string;
  content: string;
  type?: ('GENERAL' | 'WHATSAPP') | null;
  hasPlaceholder?: boolean | null;
  staffNote?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coursework".
 */
export interface Coursework {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  module: number | Module;
  topicGroup?: string | null;
  topic: string;
  parts?: (number | null) | Coursework;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendance".
 */
export interface Attendance {
  id: number;
  onlineClassLink: string;
  /**
   * After expiry time, the link will automatically be hidden from the student portal
   */
  expiry?: string | null;
  visible?: boolean | null;
  /**
   * When Class Type is set to 'Class', only batches with a scheduled class for today will be shown
   */
  batches: (number | Batch)[];
  /**
   * only modules from selected batches will be available
   */
  module?: (number | null) | Module;
  /**
   * Selected users can access this class regardless of enrollment status and restrictions
   */
  users?: (number | User)[] | null;
  /**
   * Teahcer for this class (OPTIONAl)
   */
  teacher?: (number | null) | Teacher;
  date?: string | null;
  type?: ('CLASS' | 'LAB' | 'MAKE-UP-CLASS' | 'MAKE-UP-LAB') | null;
  medium?: ('PHYSICAL' | 'ONLINE' | 'HYBRID') | null;
  content?: string | null;
  relatedAttendanceDetails?: {
    docs?: (number | AttendanceDetail)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendance-details".
 */
export interface AttendanceDetail {
  id: number;
  attendance: number | Attendance;
  medium?: ('PHYSICAL' | 'ONLINE') | null;
  enrollment: number | Enrollment;
  status?: ('PRESENT' | 'ABSENT' | 'LEAVE') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sops".
 */
export interface Sop {
  id: number;
  title: string;
  tags?: string[] | null;
  description: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-messages".
 */
export interface ContactMessage {
  id: number;
  username: string;
  phone: string;
  email: string;
  occupation?: string | null;
  message: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries".
 */
export interface Inquiry {
  id: number;
  name: string;
  email: string;
  contact: string;
  subject: 'general' | 'support' | 'sales' | 'partnership' | 'feedback' | 'other';
  query: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "classes-employee".
 */
export interface ClassesEmployee {
  id: number;
  name: string;
  perClassRate: number;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "class-records".
 */
export interface ClassRecord {
  id: number;
  employee: number | ClassesEmployee;
  date: string;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null)
      | ({
          relationTo: 'departments';
          value: number | Department;
        } | null)
      | ({
          relationTo: 'web-courses';
          value: number | WebCourse;
        } | null);
    url?: string | null;
  };
  type: '301' | '302';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        id?: string | null;
        title?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'instructors';
        value: number | Instructor;
      } | null)
    | ({
        relationTo: 'web-courses';
        value: number | WebCourse;
      } | null)
    | ({
        relationTo: 'departments';
        value: number | Department;
      } | null)
    | ({
        relationTo: 'events';
        value: number | Event;
      } | null)
    | ({
        relationTo: 'event-feedbacks';
        value: number | EventFeedback;
      } | null)
    | ({
        relationTo: 'campaigns';
        value: number | Campaign;
      } | null)
    | ({
        relationTo: 'staffs';
        value: number | Staff;
      } | null)
    | ({
        relationTo: 'messages';
        value: number | Message;
      } | null)
    | ({
        relationTo: 'teachers';
        value: number | Teacher;
      } | null)
    | ({
        relationTo: 'training-courses';
        value: number | TrainingCourse;
      } | null)
    | ({
        relationTo: 'payment-plans';
        value: number | PaymentPlan;
      } | null)
    | ({
        relationTo: 'discount-codes';
        value: number | DiscountCode;
      } | null)
    | ({
        relationTo: 'modules';
        value: number | Module;
      } | null)
    | ({
        relationTo: 'lectures';
        value: number | Lecture;
      } | null)
    | ({
        relationTo: 'batches';
        value: number | Batch;
      } | null)
    | ({
        relationTo: 'time-table';
        value: number | TimeTable;
      } | null)
    | ({
        relationTo: 'coursework';
        value: number | Coursework;
      } | null)
    | ({
        relationTo: 'students';
        value: number | Student;
      } | null)
    | ({
        relationTo: 'enrollments';
        value: number | Enrollment;
      } | null)
    | ({
        relationTo: 'fee-receipts';
        value: number | FeeReceipt;
      } | null)
    | ({
        relationTo: 'attendance';
        value: number | Attendance;
      } | null)
    | ({
        relationTo: 'attendance-details';
        value: number | AttendanceDetail;
      } | null)
    | ({
        relationTo: 'leads';
        value: number | Lead;
      } | null)
    | ({
        relationTo: 'sops';
        value: number | Sop;
      } | null)
    | ({
        relationTo: 'courses-collection';
        value: number | CoursesCollection;
      } | null)
    | ({
        relationTo: 'contact-messages';
        value: number | ContactMessage;
      } | null)
    | ({
        relationTo: 'inquiries';
        value: number | Inquiry;
      } | null)
    | ({
        relationTo: 'classes-employee';
        value: number | ClassesEmployee;
      } | null)
    | ({
        relationTo: 'class-records';
        value: number | ClassRecord;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  blocked?: T;
  gmail_username?: T;
  provider?: T;
  roles?: T;
  photo?: T;
  is_active?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  username?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "instructors_select".
 */
export interface InstructorsSelect<T extends boolean = true> {
  name?: T;
  profileImage?: T;
  expertise?: T;
  experience?: T;
  biography?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "web-courses_select".
 */
export interface WebCoursesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  subTitle?: T;
  learningOutcomes?: T;
  description?: T;
  modules?:
    | T
    | {
        heading?: T;
        content?: T;
        id?: T;
      };
  duration?: T;
  price?: T;
  crossPrice?: T;
  department?: T;
  image?: T;
  difficultyLevel?: T;
  renderStyle?: T;
  courseFormat?: T;
  totalLectures?: T;
  orderInCourses?: T;
  projects?: T;
  instructor?: T;
  FAQs?:
    | T
    | {
        question?: T;
        answer?: T;
        id?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
        canonical?: T;
        keywords?: T;
        jsonld?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "departments_select".
 */
export interface DepartmentsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  orderInDepartments?: T;
  description?: T;
  image?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  relatedCourses?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "events_select".
 */
export interface EventsSelect<T extends boolean = true> {
  title?: T;
  label?: T;
  slug?: T;
  slugLock?: T;
  image?: T;
  showInUI?: T;
  liveStreamLink?: T;
  startDateTime?: T;
  endTime?: T;
  learningOutcomes?: T;
  instructor?: T;
  department?: T;
  whatsappLink?: T;
  whatsappQrCode?: T;
  defaultParticipants?: T;
  totalRegistrations?: T;
  campaignRegistrations?: T;
  eventLeads?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "event-feedbacks_select".
 */
export interface EventFeedbacksSelect<T extends boolean = true> {
  lead?: T;
  event?: T;
  rating?: T;
  reason?: T;
  otherReason?: T;
  mentorship?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "campaigns_select".
 */
export interface CampaignsSelect<T extends boolean = true> {
  name?: T;
  platform?: T;
  detail?: T;
  startDate?: T;
  endDate?: T;
  budget?: T;
  events?: T;
  utm_source?: T;
  utm_campaign?: T;
  utm_medium?: T;
  utm_content?: T;
  utm?: T;
  campaignLeads?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "staffs_select".
 */
export interface StaffsSelect<T extends boolean = true> {
  user?: T;
  fullName?: T;
  nick?: T;
  dateOfBirth?: T;
  phoneNumber?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        state?: T;
        zipCode?: T;
        country?: T;
      };
  profilePicture?: T;
  payMode?: T;
  payPerAdmission?: T;
  fixPay?: T;
  note?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  type?: T;
  hasPlaceholder?: T;
  staffNote?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teachers_select".
 */
export interface TeachersSelect<T extends boolean = true> {
  user?: T;
  fullName?: T;
  nick?: T;
  dateOfBirth?: T;
  phoneNumber?: T;
  address?:
    | T
    | {
        street?: T;
        city?: T;
        state?: T;
        zipCode?: T;
        country?: T;
      };
  profilePicture?: T;
  payMode?: T;
  payPerLecture?: T;
  fixPay?: T;
  note?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "training-courses_select".
 */
export interface TrainingCoursesSelect<T extends boolean = true> {
  status?: T;
  title?: T;
  slug?: T;
  slugLock?: T;
  description?: T;
  modules?: T;
  departments?: T;
  fullPrice?: T;
  relatedPaymentPlans?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payment-plans_select".
 */
export interface PaymentPlansSelect<T extends boolean = true> {
  '_payment-plans_relatedPaymentPlans_order'?: T;
  'training-course'?: T;
  totalPrice?: T;
  name?: T;
  is_popular?: T;
  description?: T;
  installments?:
    | T
    | {
        amount?: T;
        due_after_days?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "discount-codes_select".
 */
export interface DiscountCodesSelect<T extends boolean = true> {
  code?: T;
  'training-course'?: T;
  paymentPlan?: T;
  discountType?: T;
  discountValue?: T;
  usageLimit?: T;
  timesUsed?: T;
  expiryAt?: T;
  isValid?: T;
  userEmail?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modules_select".
 */
export interface ModulesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  nick?: T;
  lectures?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lectures_select".
 */
export interface LecturesSelect<T extends boolean = true> {
  topic?: T;
  module?: T;
  batches?: T;
  teacher?: T;
  slug?: T;
  videoUrl?: T;
  notes?: T;
  files?: T;
  rating?: T;
  qa?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "batches_select".
 */
export interface BatchesSelect<T extends boolean = true> {
  slug?: T;
  'training-courses'?: T;
  teachers?: T;
  modules?: T;
  startDate?: T;
  duration?: T;
  endDate?: T;
  medium?: T;
  canEnroll?: T;
  active?: T;
  note?: T;
  waGroupLink?: T;
  gcrLink?: T;
  relatedEnrollments?: T;
  batchTimeTable?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "time-table_select".
 */
export interface TimeTableSelect<T extends boolean = true> {
  batch?: T;
  day?: T;
  startTime?: T;
  endTime?: T;
  room?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coursework_select".
 */
export interface CourseworkSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  module?: T;
  topicGroup?: T;
  topic?: T;
  parts?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "students_select".
 */
export interface StudentsSelect<T extends boolean = true> {
  user?: T;
  studentEmail?: T;
  studentPassword?: T;
  fullName?: T;
  phoneNumber?: T;
  gmail_username?: T;
  dateOfBirth?: T;
  gender?: T;
  education?: T;
  otp?: T;
  otpVerified?: T;
  otpGeneratedAt?: T;
  address?:
    | T
    | {
        homeAddress?: T;
        city?: T;
        state?: T;
        country?: T;
      };
  profilePicture?: T;
  studentEnrollments?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enrollments_select".
 */
export interface EnrollmentsSelect<T extends boolean = true> {
  student?: T;
  'training-course'?: T;
  slug?: T;
  batchEnrollments?:
    | T
    | {
        batch?: T;
        modules?: T;
        mode?: T;
        id?: T;
      };
  selectedPaymentPlan?: T;
  discountCode?: T;
  admissionDate?: T;
  admissionFee?: T;
  freezeDate?: T;
  unfreezeDate?: T;
  completionState?: T;
  certificateStatus?: T;
  isSuspended?: T;
  note?: T;
  relatedFeeReciepts?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fee-receipts_select".
 */
export interface FeeReceiptsSelect<T extends boolean = true> {
  student?: T;
  enrollment?: T;
  amount?: T;
  verified?: T;
  paidMethod?: T;
  status?: T;
  payDate?: T;
  dueDate?: T;
  proofText?: T;
  proofImage?: T;
  note?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendance_select".
 */
export interface AttendanceSelect<T extends boolean = true> {
  onlineClassLink?: T;
  expiry?: T;
  visible?: T;
  batches?: T;
  module?: T;
  users?: T;
  teacher?: T;
  date?: T;
  type?: T;
  medium?: T;
  content?: T;
  relatedAttendanceDetails?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendance-details_select".
 */
export interface AttendanceDetailsSelect<T extends boolean = true> {
  attendance?: T;
  medium?: T;
  enrollment?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "leads_select".
 */
export interface LeadsSelect<T extends boolean = true> {
  name?: T;
  mobile?: T;
  email?: T;
  gender?: T;
  area?: T;
  city?: T;
  province?: T;
  country?: T;
  is_online?: T;
  is_req_hostel?: T;
  stage?: T;
  interest_level?: T;
  education?: T;
  job_info?: T;
  student?: T;
  module?: T;
  department?: T;
  reminder_date?: T;
  reminder_note?: T;
  not_responding?: T;
  assign_to?: T;
  courseDemoBookings?:
    | T
    | {
        course?: T;
        bookedAt?: T;
        id?: T;
      };
  eventAttendance?:
    | T
    | {
        event?: T;
        campaign?: T;
        source?: T;
        registeredAt?: T;
        hasAttended?: T;
        id?: T;
      };
  payment_plan?: T;
  source?: T;
  query?: T;
  lead_issue?: T;
  notes?: T;
  activity?: T;
  lead_engagement?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "sops_select".
 */
export interface SopsSelect<T extends boolean = true> {
  title?: T;
  tags?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses-collection_select".
 */
export interface CoursesCollectionSelect<T extends boolean = true> {
  sortOrder?: T;
  title?: T;
  content?: T;
  contentPosition?: T;
  linkLabel?: T;
  linkUrl?: T;
  courseCard?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-messages_select".
 */
export interface ContactMessagesSelect<T extends boolean = true> {
  username?: T;
  phone?: T;
  email?: T;
  occupation?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inquiries_select".
 */
export interface InquiriesSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  contact?: T;
  subject?: T;
  query?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "classes-employee_select".
 */
export interface ClassesEmployeeSelect<T extends boolean = true> {
  name?: T;
  perClassRate?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "class-records_select".
 */
export interface ClassRecordsSelect<T extends boolean = true> {
  employee?: T;
  date?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  type?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        date?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        id?: T;
        title?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  logo?: (number | null) | Media;
  companyDescription?: string | null;
  socialLinks?:
    | {
        platform?: string | null;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  footerCols?:
    | {
        colTitle?: string | null;
        rows?:
          | {
              rowTitle?: string | null;
              href?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-event-data".
 */
export interface GlobalEventDatum {
  id: number;
  whatsappCommunity: string;
  whatsappQR?: (number | null) | Media;
  totalAttendees: number;
  completedByLearners: number;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meetings".
 */
export interface Meeting {
  id: number;
  status: 'start' | 'end' | 'hold';
  link: string;
  agenda: string;
  /**
   * Select this if you want to assign to all members
   */
  assignToAll?: boolean | null;
  assignToStudents?: (number | Student)[] | null;
  assignToBatches?: (number | Batch)[] | null;
  assignToLeads?: (number | Lead)[] | null;
  /**
   * This message will be shown when meeting is not scheduled
   */
  announcement: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "impact-section".
 */
export interface ImpactSection {
  id: number;
  heading: string;
  subheading?: string | null;
  stats?:
    | {
        value: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  testimonials?:
    | {
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        cardImage: number | Media;
        name: string;
        university?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  /**
   * WhatsApp phone number without + or spaces
   */
  whatsappPhoneNumber?: string | null;
  whatsappDefaultMessage?: string | null;
  enableWhatsappButton?: boolean | null;
  /**
   * Primary contact email for the website
   */
  contactEmail?: string | null;
  /**
   * Complete business address
   */
  address?: string | null;
  mapLocation?: {
    /**
     * Latitude coordinate for map pin
     */
    latitude?: number | null;
    /**
     * Longitude coordinate for map pin
     */
    longitude?: number | null;
    /**
     * Direct Google Maps URL (optional)
     */
    googleMapsUrl?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  logo?: T;
  companyDescription?: T;
  socialLinks?:
    | T
    | {
        platform?: T;
        link?: T;
        id?: T;
      };
  footerCols?:
    | T
    | {
        colTitle?: T;
        rows?:
          | T
          | {
              rowTitle?: T;
              href?: T;
              id?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-event-data_select".
 */
export interface GlobalEventDataSelect<T extends boolean = true> {
  whatsappCommunity?: T;
  whatsappQR?: T;
  totalAttendees?: T;
  completedByLearners?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "meetings_select".
 */
export interface MeetingsSelect<T extends boolean = true> {
  status?: T;
  link?: T;
  agenda?: T;
  assignToAll?: T;
  assignToStudents?: T;
  assignToBatches?: T;
  assignToLeads?: T;
  announcement?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "impact-section_select".
 */
export interface ImpactSectionSelect<T extends boolean = true> {
  heading?: T;
  subheading?: T;
  stats?:
    | T
    | {
        value?: T;
        description?: T;
        id?: T;
      };
  testimonials?:
    | T
    | {
        content?: T;
        cardImage?: T;
        name?: T;
        university?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  whatsappPhoneNumber?: T;
  whatsappDefaultMessage?: T;
  enableWhatsappButton?: T;
  contactEmail?: T;
  address?: T;
  mapLocation?:
    | T
    | {
        latitude?: T;
        longitude?: T;
        googleMapsUrl?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}